[{"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\index.js":"1","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\App.js":"2","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\reportWebVitals.js":"3","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Header.js":"4","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Home.js":"5","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Product.js":"6","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Checkout.js":"7","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Subtotal.js":"8","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\reducer.js":"9","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\StateProvider.js":"10","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\CheckoutProduct.js":"11","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Login.js":"12","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\firebase.js":"13","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Payment.js":"14","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\axios.js":"15","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Orders.js":"16","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Order.js":"17"},{"size":694,"mtime":1607420470876,"results":"18","hashOfConfig":"19"},{"size":1953,"mtime":1607819751944,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2687,"mtime":1607579037590,"results":"22","hashOfConfig":"19"},{"size":2578,"mtime":1607549572847,"results":"23","hashOfConfig":"19"},{"size":1342,"mtime":1607579100120,"results":"24","hashOfConfig":"19"},{"size":1410,"mtime":1607493852206,"results":"25","hashOfConfig":"19"},{"size":1249,"mtime":1607564563063,"results":"26","hashOfConfig":"19"},{"size":1381,"mtime":1607575145806,"results":"27","hashOfConfig":"19"},{"size":480,"mtime":1607417153837,"results":"28","hashOfConfig":"19"},{"size":1227,"mtime":1607818589445,"results":"29","hashOfConfig":"19"},{"size":2252,"mtime":1607491201661,"results":"30","hashOfConfig":"19"},{"size":545,"mtime":1607485030079,"results":"31","hashOfConfig":"19"},{"size":6745,"mtime":1607576637703,"results":"32","hashOfConfig":"19"},{"size":239,"mtime":1607581622610,"results":"33","hashOfConfig":"19"},{"size":1070,"mtime":1607577784302,"results":"34","hashOfConfig":"19"},{"size":1162,"mtime":1607578924643,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h4ip3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\index.js",[],["76","77"],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\App.js",["78","79"],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\reportWebVitals.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Header.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Home.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Product.js",["80"],"import React from 'react'\r\nimport './Product.css'\r\nimport {useStateValue} from './StateProvider'\r\nfunction Product({id, title, image, price, rating}) {\r\n    const [basket,dispatch] = useStateValue();\r\n    // console.log(\"this is the basket:\", basket)\r\n\r\n    const addToBasket = () =>{\r\n        // dispatch an item to the dataLayer\r\n        dispatch({\r\n            type:\"ADD_TO_BASKET\",\r\n            item:{\r\n                id:id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating:rating\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='product'>\r\n            <div className='product__info'>\r\n                <p><strong>{title}</strong></p>\r\n                <p className='product__price'>\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className='product__rating'>\r\n                    <p> {\"‚≠ê\".repeat(rating)}</p>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <img src={image} alt=\"product\"></img>\r\n            {/* \"https://images-na.ssl-images-amazon.com/images/I/51CgKGfMelL._AC_UL320_SR320,320_.jpg */}\r\n            <button onClick={addToBasket}>Add to Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Checkout.js",["81","82"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport { getBasketTotal } from './reducer';\r\nimport Subtotal from './Subtotal'\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport {useStateValue } from './StateProvider'\r\nfunction Checkout() {\r\n    const [{basket,user},dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img className=\"checkout__ad\"\r\n                src=\"https://images-na.ssl-images-amazon.com/images/G/01/AmazonMusic/2020/Marketing/070620_BackToSchool_ACQ/2G_Design_NonGateway/US-EN_073120_BackToSchool_ACQ_BH_1200x270_CV2.jpg\"alt=\"\"/>\r\n                \r\n            \r\n                <div>\r\n                    <h3>Hello, {user?.email}</h3>\r\n                  <h2 className=\"checkout__title\">Your shopping basket</h2> \r\n                  {basket.map(item=>(\r\n                      <CheckoutProduct\r\n                        id = {item.id}\r\n                        title= {item.title}\r\n                        image = {item.image}\r\n                        price = {item.price}\r\n                        rating = {item.rating}\r\n                      />\r\n                  ))} \r\n                </div>\r\n\r\n                \r\n            </div>\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Subtotal.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\reducer.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\StateProvider.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\CheckoutProduct.js",["83"],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Login.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\firebase.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Payment.js",["84"],"import React,{useState, useEffect} from 'react';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport {useStateValue} from './StateProvider';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from './axios';\r\nimport {db} from './firebase';\r\n\r\nfunction Payment() {\r\n\r\n    const [{basket,user}] = useStateValue();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const history = useHistory();\r\n\r\n    // when we write into the card element, we listen for changes in the card element and display any errors the customer types in.\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        // generate the special stripe secret which alows to charage a customer. UseEffect needs to listen to changes in the basket as the total price will change per the items changing in the basket.\r\n        const getClientSecret = async () =>{\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits => meaning, if you are sending a dollar, you have to send 100 cents instead.\r\n                url: `payments/create?total=${getBasketTotal(basket)*100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n    },[basket])\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        // block the button when submit is clicked once\r\n        setProcessing(true);\r\n\r\n        // get a client secret - whenever we have a payment to process we inform stripe about the payment and ask for a secret key to perform that transaction. \r\n        const payload = await stripe.confirmCardPayment(clientSecret,{\r\n            payment_method:{\r\n                card:elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent})=>{\r\n            // payment intent is a parameter in response sent by stripe.\r\n            // payment intent = payment confirmation\r\n\r\n            db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .doc(paymentIntent.id)\r\n            .set({\r\n                basket:basket,\r\n                amount: paymentIntent.amount,\r\n                created: paymentIntent.created\r\n            }) //when the payment comes successful from stripe, we collect the details and then push the orders into database.\r\n\r\n\r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n            // replace so that the user is not redirected back to the payment page. history.push would again bring back the payment page.\r\n            dispatchEvent({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n            history.replace('/orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = (event)=>{\r\n        // Listen for changes in CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className = \"payment__container\">\r\n                <h1>\r\n                    Checkout {<Link to=\"/checkout\">({basket?.length} items)</Link>}\r\n                </h1>\r\n                {/* payment section - delivery address */}\r\n                 <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n                 </div>\r\n                 {/* payment section - review items */}\r\n                 <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n\r\n                    </div>\r\n                    <div className = \"payment__items\">\r\n                        {basket.map((item)=>(\r\n                            <CheckoutProduct \r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price = {item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                 </div>\r\n                 {/* payment section - payment method */}\r\n                 <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/* Stripe integration payment */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange = {handleChange} />\r\n                                <div className=\"payment__priceContainer\">\r\n                                    <CurrencyFormat\r\n                                        renderText = {(value)=>(\r\n                                            <h3>Order Total: {value}</h3>\r\n                                        )}\r\n                                        decimalScale = {2}\r\n                                        value = {getBasketTotal(basket)}\r\n                                        displayType = {\"text\"}\r\n                                        thousandSeparator = {true}\r\n                                        prefix={\"$\"}\r\n                                    />\r\n                                    <button disabled={processing || disabled || succeeded}>\r\n                                        <span>{processing ? <p>Processing</p>: \"Buy Now\"}</span>\r\n                                    </button>\r\n                                </div>\r\n                                {/* if any errors due to card,it will display the error*/}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\axios.js",[],"D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Orders.js",["85","86"],"import React,{useState, useEffect} from 'react'\r\nimport {db} from './firebase'\r\nimport {useStateValue} from './StateProvider'\r\nimport Order from './Order'\r\nimport './Orders.css'\r\nfunction Orders() {\r\n    const [{basket,user}] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if (user){\r\n            db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .orderBy('created','desc')\r\n            .onSnapshot(snapshot=>{\r\n                setOrders(snapshot.docs.map(doc=>({\r\n                    id: doc.id,\r\n                    data:doc.data()\r\n                })))\r\n            })\r\n        }\r\n        else{\r\n            setOrders([])\r\n        }\r\n        \r\n\r\n    },[user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your orders</h1>\r\n            {/* Firestore - the realtime database */}\r\n            {orders?.map((order)=>{\r\n                <Order order = {order}/>\r\n\r\n               \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","D:\\myLearnings\\FullStack\\Amazon_Clone\\amazon-clone\\src\\Order.js",["87"],"import React from 'react'\r\nimport moment from 'moment'\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport './Order.css'\r\nfunction Order({order}) {\r\n    return (\r\n        <div className=\"order\">\r\n          <h2>Order</h2> \r\n          <p>{moment.unix(order.data.created).format(\"MMMM DD YYYY, h:mma\")}</p> \r\n          <p className=\"order__id\">\r\n              <small> {order.id}</small>\r\n          </p>\r\n          {order.data.basket?.map(item=>{\r\n              <CheckoutProduct \r\n                id = {item.id}\r\n                title = {item.title}\r\n                price = {item.price}\r\n                image = {item.image}\r\n                rating = {item.rating}\r\n                hideButton\r\n              />\r\n          })}\r\n          <CurrencyFormat\r\n          renderText = {(value)=>{\r\n            <h3 className = \"order_total\">Order Total: {value}</h3>\r\n          }}\r\n          decimalScale = {2}\r\n          value = {order.data.amount / 100}\r\n          displayType={\"text\"}\r\n          thousandSeparator = {true}\r\n          prefix = {\"$\"}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":10,"nodeType":"94","messageId":"95","endLine":19,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":39,"column":5,"nodeType":"98","endLine":39,"endColumn":7,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":12,"nodeType":"102","messageId":"103","endLine":5,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":8,"column":26,"nodeType":"102","messageId":"103","endLine":8,"endColumn":34},{"ruleId":"92","severity":1,"message":"93","line":5,"column":12,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"100","severity":1,"message":"106","line":47,"column":15,"nodeType":"102","messageId":"103","endLine":47,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":7,"column":13,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":34,"column":33,"nodeType":"109","messageId":"110","endLine":34,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":14,"column":39,"nodeType":"109","messageId":"110","endLine":14,"endColumn":41},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","'getBasketTotal' is defined but never used.","'dispatch' is assigned a value but never used.","'payload' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [dispatch]",{"range":"116","text":"117"},[1327,1329],"[dispatch]"]